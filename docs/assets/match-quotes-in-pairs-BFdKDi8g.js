import{u as l,_ as i}from"./WrapperPost.vue_vue_type_script_setup_true_lang-n7_8Xfoa.js";import{o as n,c as r,w as h,a as s,b as t}from"./app-CKbQotus.js";const g=s("div",{class:"prose m-auto slide-enter-content"},[s("p",null,"In JavaScript, single quotes('') and double quotes(\"\") are interchangeable. With ES6, we now even have backticks(``) for template literals. When you want to write a quick script to find all the strings without introducing a heavy parser, you may think about using RegExp. For example, you can have:"),s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light",style:{"--s-dark":"#dbd7caee","--s-light":"#393a34","--s-dark-bg":"#121212","--s-light-bg":"#ffffff"},tabindex:"0"},[s("code",{class:"language-ts"},[s("span",{class:"line"},[s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"/"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"["),s("span",{style:{"--s-dark":"#C99076","--s-light":"#A65E2B"}},"'\"`"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"]("),s("span",{style:{"--s-dark":"#6872AB","--s-light":"#5A6AA6"}},"."),s("span",{style:{"--s-dark":"#4C9A91","--s-light":"#2F798A"}},"*?"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")["),s("span",{style:{"--s-dark":"#C99076","--s-light":"#A65E2B"}},"'\"`"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"]"),s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"/"),s("span",{style:{"--s-dark":"#4D9375","--s-light":"#1E754F"}},"gm")])])]),s("p",null,"It works for most of the case, but not for mixed quotes:"),s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light",style:{"--s-dark":"#dbd7caee","--s-light":"#393a34","--s-dark-bg":"#121212","--s-light-bg":"#ffffff"},tabindex:"0"},[s("code",{class:"language-ts"},[s("span",{class:"line"},[s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"'"),s("span",{style:{"--s-dark":"#C98A7D","--s-light":"#B56959"}},'const a = "Hi, I'),s("span",{style:{"--s-dark":"#C99076","--s-light":"#A65E2B"}},"\\'"),s("span",{style:{"--s-dark":"#C98A7D","--s-light":"#B56959"}},'m Anthony"'),s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"'"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"."),s("span",{style:{"--s-dark":"#80A665","--s-light":"#59873A"}},"match"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"("),s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"/"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"["),s("span",{style:{"--s-dark":"#C99076","--s-light":"#A65E2B"}},"'\"`"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"]("),s("span",{style:{"--s-dark":"#6872AB","--s-light":"#5A6AA6"}},"."),s("span",{style:{"--s-dark":"#4C9A91","--s-light":"#2F798A"}},"*"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")["),s("span",{style:{"--s-dark":"#C99076","--s-light":"#A65E2B"}},"'\"`"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"]"),s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"/"),s("span",{style:{"--s-dark":"#4D9375","--s-light":"#1E754F"}},"m"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")["),s("span",{style:{"--s-dark":"#4C9A91","--s-light":"#2F798A"}},"1"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"]"),s("span",{style:{"--s-dark":"#758575DD","--s-light":"#A0ADA0"}},' // "Hi, I"')])])]),s("p",null,"You have to make sure the starting quote and ending quote are the same type. Initially I thought it was impossible to do it in RegExp, or we have to do like this:"),s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light",style:{"--s-dark":"#dbd7caee","--s-light":"#393a34","--s-dark-bg":"#121212","--s-light-bg":"#ffffff"},tabindex:"0"},[s("code",{class:"language-ts"},[s("span",{class:"line"},[s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"/"),s("span",{style:{"--s-dark":"#C4704F","--s-light":"#AB5E3F"}},"'"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"("),s("span",{style:{"--s-dark":"#6872AB","--s-light":"#5A6AA6"}},"."),s("span",{style:{"--s-dark":"#4C9A91","--s-light":"#2F798A"}},"*?"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")"),s("span",{style:{"--s-dark":"#C4704F","--s-light":"#AB5E3F"}},"'"),s("span",{style:{"--s-dark":"#CB7676","--s-light":"#AB5959"}},"|"),s("span",{style:{"--s-dark":"#C4704F","--s-light":"#AB5E3F"}},'"'),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"("),s("span",{style:{"--s-dark":"#6872AB","--s-light":"#5A6AA6"}},"."),s("span",{style:{"--s-dark":"#4C9A91","--s-light":"#2F798A"}},"*?"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")"),s("span",{style:{"--s-dark":"#C4704F","--s-light":"#AB5E3F"}},'"'),s("span",{style:{"--s-dark":"#CB7676","--s-light":"#AB5959"}},"|"),s("span",{style:{"--s-dark":"#C4704F","--s-light":"#AB5E3F"}},"`"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"("),s("span",{style:{"--s-dark":"#6872AB","--s-light":"#5A6AA6"}},"."),s("span",{style:{"--s-dark":"#4C9A91","--s-light":"#2F798A"}},"*?"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")"),s("span",{style:{"--s-dark":"#C4704F","--s-light":"#AB5E3F"}},"`"),s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"/"),s("span",{style:{"--s-dark":"#4D9375","--s-light":"#1E754F"}},"gm")])])]),s("p",null,"Thatâ€™s definitely a bad idea as it makes you duplicated your notations. Until I found this solution:"),s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light",style:{"--s-dark":"#dbd7caee","--s-light":"#393a34","--s-dark-bg":"#121212","--s-light-bg":"#ffffff"},tabindex:"0"},[s("code",{class:"language-ts"},[s("span",{class:"line"},[s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"/"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"(["),s("span",{style:{"--s-dark":"#C99076","--s-light":"#A65E2B"}},"'\"`"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"])("),s("span",{style:{"--s-dark":"#6872AB","--s-light":"#5A6AA6"}},"."),s("span",{style:{"--s-dark":"#4C9A91","--s-light":"#2F798A"}},"*?"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")"),s("span",{style:{"--s-dark":"#4D9375","--s-light":"#1E754F"}},"\\1"),s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"/"),s("span",{style:{"--s-dark":"#4D9375","--s-light":"#1E754F"}},"gm")])])]),s("p",null,[s("code",null,"\\1"),t(" is a "),s("a",{href:"https://www.regular-expressions.info/backref.html",target:"_blank",rel:"noopener"},"Backreferences"),t(" to your first group, similarly you can have "),s("code",null,"\\2"),t(" for the second group 2 and "),s("code",null,"\\3"),t(" for the third, you got the idea. This is exactly what I need! Take it a bit further, to exclude the backslash escaping, now we can have a much reliable RegExp for extracting quoted texts from any code.")]),s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light",style:{"--s-dark":"#dbd7caee","--s-light":"#393a34","--s-dark-bg":"#121212","--s-light-bg":"#ffffff"},tabindex:"0"},[s("code",{class:"language-ts"},[s("span",{class:"line"},[s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"/"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"(["),s("span",{style:{"--s-dark":"#C99076","--s-light":"#A65E2B"}},"\"'`"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"])((?:"),s("span",{style:{"--s-dark":"#E6CC77","--s-light":"#BDA437"}},"\\\\"),s("span",{style:{"--s-dark":"#4D9375","--s-light":"#1E754F"}},"\\1"),s("span",{style:{"--s-dark":"#CB7676","--s-light":"#AB5959"}},"|"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"(?:(?!"),s("span",{style:{"--s-dark":"#4D9375","--s-light":"#1E754F"}},"\\1"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")"),s("span",{style:{"--s-dark":"#CB7676","--s-light":"#AB5959"}},"|"),s("span",{style:{"--s-dark":"#6872AB","--s-light":"#5A6AA6"}},"\\n"),s("span",{style:{"--s-dark":"#CB7676","--s-light":"#AB5959"}},"|"),s("span",{style:{"--s-dark":"#6872AB","--s-light":"#5A6AA6"}},"\\r"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")"),s("span",{style:{"--s-dark":"#6872AB","--s-light":"#5A6AA6"}},"."),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")"),s("span",{style:{"--s-dark":"#4C9A91","--s-light":"#2F798A"}},"*?"),s("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")"),s("span",{style:{"--s-dark":"#4D9375","--s-light":"#1E754F"}},"\\1"),s("span",{style:{"--s-dark":"#C98A7D77","--s-light":"#B5695977"}},"/"),s("span",{style:{"--s-dark":"#4D9375","--s-light":"#1E754F"}},"mg")])])]),s("p",null,[t("You can find it running in action on my "),s("a",{href:"https://github.com/windicss/vite-plugin-windicss/blob/571c1d9d9bcbf699038614e6f9fab0ddc62b959b/packages/plugin-utils/src/regexes.ts#L1",target:"_blank",rel:"noopener"},[s("code",null,"vite-plugin-windicss")]),t(".")])],-1),A={__name:"match-quotes-in-pairs",setup(d){const a={title:"Match Quotes in Pairs",date:"2021-02-28T16:00:00.000Z",lang:"en",duration:"5min",type:"note",image:"https://antfu.me/og/match-quotes-in-pairs.png",meta:[{property:"og:title",content:"Match Quotes in Pairs"},{name:"twitter:title",content:"Match Quotes in Pairs"},{property:"og:image",content:"https://antfu.me/og/match-quotes-in-pairs.png"},{name:"twitter:image",content:"https://antfu.me/og/match-quotes-in-pairs.png"},{name:"twitter:card",content:"summary_large_image"}]};return l({title:"Match Quotes in Pairs",meta:[{property:"og:title",content:"Match Quotes in Pairs"},{name:"twitter:title",content:"Match Quotes in Pairs"},{property:"og:image",content:"https://antfu.me/og/match-quotes-in-pairs.png"},{name:"twitter:image",content:"https://antfu.me/og/match-quotes-in-pairs.png"},{name:"twitter:card",content:"summary_large_image"}]}),(o,k)=>{const e=i;return n(),r(e,{frontmatter:a},{default:h(()=>[g]),_:1})}}};export{A as default};
